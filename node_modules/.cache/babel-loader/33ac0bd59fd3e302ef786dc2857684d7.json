{"ast":null,"code":"var _jsxFileName = \"/Users/nodayuuta/Desktop/react_learning/method-component-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  //const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState('');\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('セット');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); //setFormIsValid(\n    //  event.target.value.includes('@') && passwordState.isValid\n    //);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {} else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"v7iPH01zHYbGHOSfouo2ScUfuGc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/nodayuuta/Desktop/react_learning/method-component-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","trim","length","passwordReducer","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailInputRef","passwordInputRef","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: '', isValid: false };\n};\n\nconst Login = (props) => {\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  //const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState('');\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('セット');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 500);\n  \n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  \n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    //setFormIsValid(\n    //  event.target.value.includes('@') && passwordState.isValid\n    //);\n\n  };\n  \n\n  const passwordChangeHandler = (event) => {\n\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value})\n\n    setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n\n    dispatchEmail({type: 'INPUT_BLUR'});\n\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n\n    } else {\n      \n    }\n    \n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n          id=\"email\" \n          label=\"E-Mail\" \n          type=\"email\" \n          isValid={emailIsValid} \n          value={emailState.value} \n          onChange={emailChangeHandler} \n          onBlur={validateEmailHandler} \n        />\n        <Input \n          id=\"password\" \n          label=\"Password\" \n          type=\"password\" \n          isValid={passwordIsValid} \n          value={passwordState.value} \n          onChange={passwordChangeHandler} \n          onBlur={validatePasswordHandler} \n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} >\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}